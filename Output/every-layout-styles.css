

/*
 Stack from every-layout.dev
 */

.stack {
  --space: 1.5rem;
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  
}

.stack > * {
  margin-top: 0;
  margin-bottom: 0;
}

.stack > * + * {
  margin-top: var(--space);
}

/*
 Sidebar from every-layout.dev
 */
.with-sidebar {
  overflow: hidden;
}

.with-sidebar > * {
  display: flex;
  flex-wrap: wrap;
  margin: calc(5rem / 2 * -1);
}

.with-sidebar > * > * {
  margin: calc(5rem / 2);
  flex-basis: 20vw;
  flex-grow: 1;
}

.with-sidebar > * > :last-child {
  flex-basis: 0;
  flex-grow: 999;
  min-width: calc(70% - 5rem);
}

/*
Grid from every-layout.dev
*/
.grid {
  display: grid;
  grid-gap: 1rem;
}

@supports (width: min(250px, 100%)) {
  .grid {
    grid-template-columns: repeat(auto-fit, minmax(min(250px, 100%), 1fr));
  }
}

/*
 Reel from any-layout.dev
 */
.reel {
  display: flex;
  height: 20rem;
  overflow-x: auto;
  overflow-y: hidden;
  
  scrollbar-color: #fff #000;
}

.reel::-webkit-scrollbar {
  height: 1rem;
}

.reel::-webkit-scrollbar-track {
  background-color: #000;
}

.reel::-webkit-scrollbar-thumb {
  background-color: #000;
  background-image: linear-gradient(#000 0, #000 0.25rem, #fff 0.25rem, #fff 0.75rem, #000 0.75rem);
}

.reel > * {
  flex: 0 0 20rem;
}


.reel > img {
  height: 90%;
  flex-basis: auto;
  width: auto;
}

.reel > * + * {
  margin-left: 1rem;
}

.reel.overflowing {
  padding-bottom: 1rem;
}

/*
 Switcher componenet from every-layout.dev
 */
.switcher > * {
  display: flex;
  flex-wrap: wrap;
  margin: calc((var(--s1) / 2) * -1);
}

.switcher > * > * {
  flex-grow: 1;
  flex-basis: calc((var(--measure) - (100% - var(--s1))) * 999);
  margin: calc(var(--s1) / 2);
}

.switcher > * > :nth-last-child(n+5),
.switcher > * > :nth-last-child(n+5) ~ * {
  flex-basis: 100%;
}

/*
 Cluster component from every-layout.dev. Two nested for nav bar
 */
.outer-cluster {
  --space: 1rem;
  overflow: hidden;
}

.outer-cluster > * {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  align-items: flex-start;
  margin: calc(var(--space) / 2 * -1);
}

.outer-cluster > * > * {
  margin: calc(var(--space) / 2);
}
  
.inner-cluster {
  --space: 1rem;
  overflow: hidden;
}

.inner-cluster > * {
  display: flex;
  flex-wrap: wrap;
  justify-content: flex-start;
  align-items: center;
  margin: calc(var(--space) / 2 * -1);
}

.inner-cluster > * > * {
  margin: calc(var(--space) / 2);
}
  



